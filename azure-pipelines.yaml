trigger:
  branches:
    include:
    - main

variables:
  dockerRepository: terratamldacr.azurecr.io/nginx-static-website
  dockerImageTag: $(Build.BuildId)
  resourceGroup: terraform-aks
  aksClusterName: terra-aks
  dockerUsername: terratamldacr

stages:
- stage: Build
  displayName: Build Docker Image
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        repository: $(dockerRepository)
        dockerfile: Dockerfile
        tags: $(dockerImageTag)
        containerRegistry: acr-connection

- stage: Deploy
  displayName: Deploy to AKS
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: AzureCLI@2
      displayName: Set kubectl context
      inputs:
        azureSubscription: azure-service-connection
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az aks get-credentials --resource-group $(resourceGroup) --name $(aksClusterName) --overwrite-existing
    - script: |
        kubectl create secret docker-registry regcred \
          --docker-server=terratamldacr.azurecr.io/ \
          --docker-username=$(dockerUsername) \
          --docker-password=$(dockerPassword) \
          --dry-run=client -o yaml | kubectl apply -f -
      displayName: Create Docker Registry Secret
    - script: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        kubectl set image deployment/nginx-static-website nginx=$(dockerRepository):$(dockerImageTag)
        kubectl rollout status deployment/nginx-static-website --timeout=120s
      displayName: Deploy Kubernetes Manifests and Update Image
